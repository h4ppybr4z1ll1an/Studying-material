//My solution to the challenge at https://www.hackerrank.com/challenges/cpp-variadics/problem

#include <iostream>
using namespace std;

// My code

template<bool ...VALUES>
class rbv;

template<bool v> 
class rbv<v> {
    public:
    static constexpr long long value = v;
};

template<bool v, bool ...values>
class rbv<v, values...> {

    public:
    static constexpr long long value = v | rbv<values...>::value << 1;
};

template<bool ...VALUES>
long long reversed_binary_value() {
    return rbv<VALUES...>::value;
};

//Code already in the challenge


template <int n, bool...digits>
struct CheckValues {
  	static void check(int x, int y)
  	{
    	CheckValues<n-1, 0, digits...>::check(x, y);
    	CheckValues<n-1, 1, digits...>::check(x, y);
  	}
};

template <bool...digits>
struct CheckValues<0, digits...> {
  	static void check(int x, int y)
  	{
    	int z = reversed_binary_value<digits...>();
    	std::cout << (z+64*y==x);
  	}
};

int main()
{
  	int t; std::cin >> t;

  	for (int i=0; i!=t; ++i) {
		int x, y;
    	cin >> x >> y;
    	CheckValues<6>::check(x, y);
    	cout << "\n";
  	}
}
